/// Система управления компонентами библиотеки ///

Краткое описание: Эта система объединяет в себе три ключевых элемента: каталог книг, каталог клиентов и каталог мест в читальном зале. Она обеспечивает комплексное управление библиотечными ресурсами, начиная от каталогизации книг и заканчивая распределением мест в читальном зале.



// Описание процессов //
(см. sipoc1, 2, 3 и диаграмму use-case)
Рассмотрим основные процессы, выполняемые нашей системой, со стороны клиента (т.е. те, в которых непосредственно нужно участие пользователя):

- Запись в библиотеку. Клиент приходит, предоставляет некоторые свои персональные данные и заносится в каталог всех клиентов. Теперь это зарегистрированный пользователь с уникальным id, информация о нем может подтягиваться при бронировании места в читальном зале или при заказе книги.

- Бронь места. Клиенту нужно лишь указать номер желаемого места и понадобится ли ему переносной проектор. Вся информация о клиенте подтягивается в бронь из сущности клиента.

- Заказ книги. Пользователь указывает, книги какого автора, какого жанра или периода его интересуют или ищет необходимые книги по названию. После этого создается электронный формуляр, информация в который подтягивается из сущности пользователя.

Использовать нашу систему может не только пользователь или регистратор, но и библиотекарь. Он может редактировать информацию о книге в базе данных, удалять списанные книги или добавлять поступившие. Однако эти процессы не так интересны, на них останавливаться не будем.



// Описание сущностей //
(см. ER-диаграмму и UML диаграмму классов)


- Клиент - структура, отвечающая за зарегистрированного пользователя, способного бронировать место, брать и возвращать книгу.
Имеет:	имя,
	номер телефона,
	электронная почта,
	уникальный id клиента

- Книга - структура, отвечающая за хранение книги.
Имеет:	название,
	автора,
	жанр,
	год написания,
	уникальный id книги

- Место - структура, отвечающая за конкретное место в читальном зале.
Имеет:	есть ли проектор (переменная типа bool, отображающая, есть ли рядом с этим местом переносной проектор),
	уникальный id места

- Бронь места - специальная сущность, создающаяся в базе данных, когда пользователь забронировал определенное место. Связывает сущность клиента и места.
Имеет:	id клиента,
	id места,
	дата брони,
	нужен ли проектор

- Заказ - специальная сущность, создающаяся в базе данных, когда пользователь взял определенную книгу. Связывает сущность клиента и книги.
Имеет:	id клиента,
	id книги,
	дата брони,
	время брони

Примечание: Пользователь может сделать только одну бронь места или книги, но в одной брони может быть несколько книг или мест. Ещё пользователь не обязательно должен бронировать место, но забронированное место обязательно связано с пользователем. (У меня в ER-диаграмме полностью пунктирная стрелочка, а должна быть наполовину пунктирную, я просто не нашла в draw.io такую)

В ходе разработки проекта была сделана mind-map, в которой отмечено гораздо больше потенциальных сущностей, но в процессе работы тема сузилась, и они стали не нужны. Можно воспринимать mind-map как потенциальный путь расширения системы.
